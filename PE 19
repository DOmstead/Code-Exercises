// for begginer date to current date ( or whenever asked for) 
// getDay(). for each time that is equal to 1 (Monday). incrment monday counter
//
//if (check for leap year)
//else if (check for other edge case )
//else increment i by one. so in for loop just use break or continue. Or put nothing at all ( no else case if that if loop already works to increment as desired)

function dayCounter(startDate,endDate,desiredDayNum){
  let dayCounter = 0;
  let startFinished = false;
  startDate = new Date(startDate);
  endDate = new Date(endDate);
  //let daysTotal = endDate - startDate
  //while date is < enddate
  //take start date, check if it is a monday, and then if it doesn't meet special criteria, use setdate to update date by a day.
  //if month is 03,05,07 ( whatever 28 days are) and number is less than 28, set date as one day higher.
  //else increase month. if month is 12 increase year. check against leap year and single other parameter given.  
  
  while(startFinished != true && startDate.getDay() != desiredDayNum){
    startDate.setDate(startDate.getDate() + 1);
    if( startDate.getDate() == desiredDayNum ){
      startFinished = true;
    }
  }

  while(startDate <= endDate){
    if(startDate.getDate() == 1 && startDate.getDay() == desiredDayNum){
      dayCounter++;
    }
    startDate.setDate(startDate.getDate() + 7);
  }

//   while(startDate <= endDate){
    
//     //This handles the leap year edge case. First checks if it's February, then the date, then if it meets the leap year criteria.
//     //This increases efficiciency since Feb 28th is the only day it matters if this is a leap year since this is when the leap year exception would be applied.
//     if(startDate.getMonth() == 1 && startDate.getDate() == 28 && startDate.getFullYear() % 4 == 0 && (startDate.getFullYear() % 100 != 0 || startDate.getFullYear() % 400 == 0) ){
//       //check to see if it was the desired date
//       //then set to feb 29th
//       if(startDate.getDate() == 1 && startDate.getDay() == desiredDayNum){
        
//         dayCounter++;
//         startDate.setDate(29);
//         continue;
//       }
//       console.log('Leap Year!');
//       startDate.setDate(29);
//       continue;
//     }
//     //Now need to correctly account for months with differing days, then just the standard loop
    
//     if( startDate.getDate() == 1 && startDate.getDay() == desiredDayNum ){
//       dayCounter++;
//       console.log(dayCounter + ' ' + startDate.getFullYear() + '-' + startDate.getMonth() + '-' + startDate.getDate() );
//     }

//     //two or three if blocks. if month is equal to this and date is this, do this 
//     //else do  this
//     //else do this
//     //else just increment by a day
//     //Don't forget december to do the year and month reset. 
//     if ((startDate.getMonth() == (3 || 5 || 8 || 10) && startDate.getDate() == 30) || (startDate.getMonth() == (0 || 2 || 4 || 6 || 7 || 9) && startDate.getDate() == 31) ){
//       startDate.setMonth(startDate.getMonth() + 1);
//       startDate.setDate(1);  
//     }
//     else if (startDate.getMonth() == 11 && startDate.getDate() == 31){
//       startDate.setFullYear(startDate.getFullYear() + 1, 0, 1 );
//     }
//     //Runs every day that isn't the end of the month or other special edge case.
//     else{
//       startDate.setDate(startDate.getDate() + 1);
//     }
//   }
  return dayCounter;
}

console.log(dayCounter('1901-1-01','2000-12-31',0));

